<?xml version="1.0"?>
<!DOCTYPE module [
    <!ENTITY szlig "&#223;">
    <!ENTITY copy "&#169;">
    <!ENTITY baseTypes-mlsl SYSTEM 'file://C:\Program%20Files%20(x86)\ETAS\INTECRIO5.0\SCOOP-IX\1.5/common/baseTypes-mlsl.six'>
    ]>
<?xml-stylesheet type="text/xsl" href="file://C:\Program%20Files%20(x86)\ETAS\INTECRIO5.0\SCOOP-IX\1.5/common/showSCOOP-IX.xsl"?>
<!--
<h1>SCOOP-IX</h1>
<p>
    <strong>Copyright &copy; 2014 ETAS GmbH</strong>, Borsigstra&szlig;e 14, D-70469 Stuttgart. <em>All rights reserved.</em>
</p>
-->
<module xmlns="http://www.etas.com/scoop-ix/1.5" xmlns:ix="http://www.etas.com/scoop-ix/1.5" xmlns:mlsl="http://www.etas.com/scoop-ix/1.5/modelDomain/matlab-simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.etas.com/scoop-ix/1.5
        file://C:\Program%20Files%20(x86)\ETAS\INTECRIO5.0\SCOOP-IX\1.5/schemas/scoop-ix-domain-mlsl.xsd" xmlns:html="http://www.w3.org/1999/xhtml">
	<directoryLocations scheme="MATLAB 23.2">
		<directory identifier="integratorDir" path="C:\Program Files (x86)\ETAS\INTECRIO5.0\MATLAB\"/>
		<directory identifier="toolDir" path=".\"/>
		<directory identifier="modelDir" path="C:\Users\joser\OneDrive\Documentos\GitHub\ETAS\Simulink\"/>
		<directory identifier="codeDir" path="C:\Users\joser\OneDrive\Documentos\GitHub\ETAS\Build\Ellipse_irt_rtw\"/>
	</directoryLocations>
	<moduleInfo identifier="Ellipse">
		<name>Ellipse</name>
		<modelLink href="mlsl:///&quot;{{modelDir}}Ellipse.slx&quot;"/>
		<version major="13" minor="13"/>
		<dateTime kind="created" year="2022" month="8" day="20" hour="10" minute="22" second="41"/>
		<dateTime kind="lastModified" year="2024" month="7" day="18" hour="13" minute="15" second="8"/>
		<completion degree="full"/>
		<suitability>
			<application domain="rapidPrototyping" addressesAvailable="true" nestedDataStructuresAvailable="true"/>
			<application domain="softwareDevelopment" addressesAvailable="false" nestedDataStructuresAvailable="true"/>
		</suitability>
		<user lastName="joser" role="modifier"/>
		<creators>
			<user lastName="Eric" role="creator"/>
			<tool kind="environment" vendor="The Mathworks, Inc." name="MATLAB">
				<version major="23" minor="2" year="2023" month="8" day="1" info="R2023b"/>
			</tool>
			<tool kind="modeler" vendor="The Mathworks, Inc." name="Simulink">
				<version major="23" minor="2" year="2023" month="8" day="1" info="R2023b"/>
			</tool>
			<tool kind="modeler" vendor="The Mathworks, Inc." name="Stateflow">
			</tool>
			<tool kind="codeGenerator" vendor="The Mathworks, Inc." name="Simulink Coder">
				<version major="23" minor="2" year="2023" month="8" day="1" info="R2023b"/>
				<mode name="target" value="INTECRIO Real-Time Target"/>
				<configuration>
					<option identifier="InlineParameters">1</option>
					<option identifier="InlineInvariantSignals">0</option>
					<option identifier="Solver">FixedStepDiscrete</option>
					<option identifier="SolverType">FixedStep</option>
					<option identifier="FixedStepOpts.FixedStep">0.2</option>
					<option identifier="FixedStepOpts.SolverMode">SingleTasking</option>
				</configuration>
			</tool>
			<tool kind="codeGenerator" vendor="The Mathworks, Inc." name="MATLAB Coder">
				<version major="23" minor="2" year="2023" month="8" day="1" info="R2023b"/>
			</tool>
			<tool kind="codeGenerator" vendor="ETAS GmbH" name="Connector for Simulink (IRT)" family="INTECRIO Tool Suite">
				<configuration>
					<option identifier="SCOOPIXFileName"><![CDATA[Ellipse.six]]></option>
					<option identifier="ExternalMode">0</option>
					<option identifier="IgnoreCustomStorageClasses">1</option>
					<option identifier="StopSimuAfterAssert">1</option>
					<option identifier="GenerateOnlySelectedSignalsToASAP2">0</option>
				</configuration>
			</tool>
		</creators>
	</moduleInfo>
	<codeInfo>
		<constitution mode="sourceCode"/>
		<dateTime kind="created" year="2024" month="7" day="27" hour="11" minute="9" second="42"/>
		<target>
			<board vendor="ETAS GmbH" model="INTECRIO Generic Experimental Target"/>
			<tool kind="compiler" vendor="GNU Project" family="GNU Compiler Collection" name="GNU C Compiler">
				<configuration>
					<optionKind name="macroDefine" prefix="-D"/>
					<optionKind name="includeDirectory" prefix="-I"/>
					<!-- RTW specific defines -->
					<option kind="macroDefine" name="USE_RTMODEL"/>
					<option kind="macroDefine" name="MODEL">Ellipse</option>
					<option kind="macroDefine" name="RT"/>
					<option kind="macroDefine" name="NUMST">1</option>
					<option kind="macroDefine" name="TID01EQ">0</option>
					<option kind="macroDefine" name="NCSTATES">0</option>
					<option kind="macroDefine" name="MT">0</option>
					<option kind="macroDefine" name="HAVESTDIO"/>
					<option kind="macroDefine" name="MdlStart">MdlStart_Ellipse</option>
					<option kind="macroDefine" name="MdlOutputs">MdlOutputs_Ellipse</option>
					<option kind="macroDefine" name="MdlUpdate">MdlUpdate_Ellipse</option>
					<option kind="macroDefine" name="MdlTerminate">MdlTerminate_Ellipse</option>
					<option kind="macroDefine" name="MdlInitializeSizes">MdlInitializeSizes_Ellipse</option>
					<option kind="macroDefine" name="MdlInitializeSampleTimes">MdlInitializeSampleTimes_Ellipse</option>
					<option kind="macroDefine" name="MdlInitialize">MdlInitialize_Ellipse</option>
					<option kind="macroDefine" name="MdlEnable">MdlEnable_Ellipse</option>
					<option kind="macroDefine" name="MdlDerivatives">MdlDerivatives_Ellipse</option>
					<option kind="macroDefine" name="MdlProjection">MdlProjection_Ellipse</option>
					<option kind="macroDefine" name="rt_ODECreateIntegrationData">rt_ODECreateIntegrationData_Ellipse</option>
					<option kind="macroDefine" name="rt_ODEUpdateContinuousStates">rt_ODEUpdateContinuousStates_Ellipse</option>
					<option kind="macroDefine" name="rt_ODEDestroyIntegrationData">rt_ODEDestroyIntegrationData_Ellipse</option>
					<option kind="macroDefine" name="rt_ODECacheDataIntoSolverInfo">rt_ODECacheDataIntoSolverInfo_Ellipse</option>
					<option kind="macroDefine" name="rt_ODERetrieveDataFromSolverInfo">rt_ODERetrieveDataFromSolverInfo_Ellipse</option>
					<option kind="macroDefine" name="rt_ODECreateSolverInfo">rt_ODECreateSolverInfo_Ellipse</option>
					<option kind="macroDefine" name="rt_SimInitTimingEngine">rt_SimInitTimingEngine_Ellipse</option>
					<option kind="macroDefine" name="rt_SimGetNextSampleHit">rt_SimGetNextSampleHit_Ellipse</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteTaskSampleHits">rt_SimUpdateDiscreteTaskSampleHits_Ellipse</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteEvents">rt_SimUpdateDiscreteEvents_Ellipse</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteTaskTime">rt_SimUpdateDiscreteTaskTime_Ellipse</option>
					<option kind="macroDefine" name="rt_CallSys">rt_CallSys_Ellipse</option>
					<option kind="macroDefine" name="rt_EnableSys">rt_EnableSys_Ellipse</option>
					<option kind="macroDefine" name="rt_DisableSys">rt_DisableSys_Ellipse</option>
					<option kind="macroDefine" name="rt_SimDestroyTimingEngine">rt_SimDestroyTimingEngine_Ellipse</option>
					<option kind="macroDefine" name="rt_InitTimingEngine">rt_InitTimingEngine_Ellipse</option>
					<option kind="macroDefine" name="rt_DestroyTimingEngine">rt_DestroyTimingEngine_Ellipse</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteTaskSampleHits">rt_UpdateDiscreteTaskSampleHits_Ellipse</option>
					<option kind="macroDefine" name="rt_GetNextSampleHit">rt_GetNextSampleHit_Ellipse</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteEvents">rt_UpdateDiscreteEvents_Ellipse</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteTaskTime">rt_UpdateDiscreteTaskTime_Ellipse</option>
					<!-- RTW specific include directories -->
					<option kind="includeDirectory"><![CDATA[{{codeDir}}]]></option>
					<option kind="includeDirectory"><![CDATA[{{integratorDir}}c\src\]]></option>
					<option kind="includeDirectory"><![CDATA[{{integratorDir}}c\lib\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\simulink\include\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\extern\include\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\rtw\c\src\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\rtw\c\libsrc\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\_sharedutils\]]></option>
				</configuration>
			</tool>
		</target>
	</codeInfo>
	<!-- Model specific files -->
	<fileContainer constitution="sourceCode">
		<pathBase path="{{codeDir}}"/>
		<!-- Model specific source files -->
		<file name="Ellipse_types.h" kind="header"/>
		<file name="Ellipse.h" kind="header"/>
		<file name="Ellipse.c" kind="body"/>
		<file name="Ellipse_private.h" kind="header"/>
		<file name="rtmodel.h" kind="header"/>
		<file name="Ellipse_main.c" kind="body"/>
		<file name="rt_sim.c" path="{{codeDir}}external\rtw\c\src\" kind="body"/>
		<!-- Target specific libraries -->
		<file name="rtwStaticLib.lib" kind="symbolicLibrary"/>
		<file name="rtwSharedLib.lib" kind="symbolicLibrary"/>
		<!-- Additional files -->
	</fileContainer>
	<fileContainer constitution="referencedModels">
	</fileContainer>
	<interface>
		<modelLinkBase href="mlsl:///{{modelDir}}Ellipse.slx?"/>
		<pathBase path="{{codeDir}}"/>
		<fileOrigin name="Ellipse.c"/>
		<fileOrigin name="rt_nonfinite.c"/>
		<fileOrigin name="Ellipse_main.c"/>
		<headerFile name="Ellipse.h"/>
		<headerFile name="Ellipse_private.h"/>
		<usage layoutFamily="mlsl:standardLayout"/>
		<!-- "import" MATLAB/Simulink base type and complex struct definitions via external entity -->
		&baseTypes-mlsl;
		<definitions>
			<structDef name="_B_Ellipse_T">
				<fileOrigin name="Ellipse.h"/>
				<structMember identifier="Merge">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Opaque</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="B_Ellipse_T">
				<struct/><typeRef name="_B_Ellipse_T"/>
				<fileOrigin name="Ellipse.h"/>
				<annotation>
					<documentation>Block signals (auto storage)</documentation>
				</annotation>
			</typeDef>
			<structDef name="ExtU_Ellipse_T_tag">
				<fileOrigin name="Ellipse.h"/>
				<structMember identifier="el_LATITUDE_EKF">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_LATITUDE_EKF</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_LONGITUDE_EKF">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_LONGITUDE_EKF</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_GPS_Valid">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_GPS_Valid</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_EKF_Valid">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_EKF_Valid</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_EKF_X">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_EKF_X</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_GPS_N">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_GPS_N</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_GPS_E">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_GPS_E</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_SolutionMode">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_SolutionMode</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_GPS_D">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_GPS_D</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_EKF_Y">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_EKF_Y</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_EKF_Z">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_EKF_Z</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="ExtU_Ellipse_T">
				<struct/><typeRef name="ExtU_Ellipse_T_tag"/>
				<fileOrigin name="Ellipse.h"/>
			</typeDef>
			<structDef name="ExtY_Ellipse_T_tag">
				<fileOrigin name="Ellipse.h"/>
				<structMember identifier="el_VEL">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_VEL</documentation>
					</annotation>
				</structMember>
				<structMember identifier="el_Vel_OK">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/el_Vel_OK</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="ExtY_Ellipse_T">
				<struct/><typeRef name="ExtY_Ellipse_T_tag"/>
				<fileOrigin name="Ellipse.h"/>
			</typeDef>
			<baseDef identifier="Ellipse_B">
				<type><typeRef name="B_Ellipse_T"/></type>
				<fileOrigin name="Ellipse.c"/>
				<annotation>
					<documentation>The rtB data structure for signals.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Ellipse_U">
				<type><typeRef name="ExtU_Ellipse_T"/></type>
				<fileOrigin name="Ellipse.c"/>
				<annotation>
					<documentation>The rtU data structure for external inputs.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Ellipse_Y">
				<type><typeRef name="ExtY_Ellipse_T"/></type>
				<fileOrigin name="Ellipse.c"/>
				<annotation>
					<documentation>The rtY data structure for external outputs.</documentation>
				</annotation>
			</baseDef>
			<conversion name="Ellipse_CM_double">
				<rationalFunction>
					<numerator bx="1.0"/>
					<denominator f="1.0"/>
				</rationalFunction>
				<annotation>
					<documentation>Q = V</documentation>
				</annotation>
			</conversion>
		</definitions>
		<!-- rtP parameters following -->
		<!-- Constant parameters following -->
		<!-- Exported global parameters following -->
		<!-- Imported extern parameters following -->
		<!-- Global BlockIO (rtB) signals following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_B.Merge">
				<definitionLocation>
					<baseRef identifier="Ellipse_B"/>
					<memberRef identifier="Merge"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.Opaque.Merge">
				<name>Merge</name>
				<modelLink href="Ellipse/Opaque"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model" type="atomic"/>
					<pathNode name="Merge" kind="mlsl:block"/>
					<pathNode name="Merge" kind="mlsl:signal"/>
				</modelLocation>
				<modelKind kind="variable" visibility="private">
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- Global constant BlockIO (rtC) signals following -->
		<!-- Exported global and imported extern signals following -->
		<!-- Global IRT DWork port signals following -->
		<!-- rtU input ports following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_LATITUDE_EKF">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_LATITUDE_EKF"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_LATITUDE_EKF">
				<name>el_LATITUDE_EKF</name>
				<modelLink href="Ellipse/el_LATITUDE_EKF"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_LATITUDE_EKF" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_LONGITUDE_EKF">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_LONGITUDE_EKF"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_LONGITUDE_EKF">
				<name>el_LONGITUDE_EKF</name>
				<modelLink href="Ellipse/el_LONGITUDE_EKF"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_LONGITUDE_EKF" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_GPS_Valid">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_GPS_Valid"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_GPS_Valid">
				<name>el_Vel_GPS_Valid</name>
				<modelLink href="Ellipse/el_Vel_GPS_Valid"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_GPS_Valid" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_EKF_Valid">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_EKF_Valid"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_EKF_Valid">
				<name>el_Vel_EKF_Valid</name>
				<modelLink href="Ellipse/el_Vel_EKF_Valid"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_EKF_Valid" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_EKF_X">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_EKF_X"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_EKF_X">
				<name>el_Vel_EKF_X</name>
				<modelLink href="Ellipse/el_Vel_EKF_X"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_EKF_X" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_GPS_N">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_GPS_N"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_GPS_N">
				<name>el_Vel_GPS_N</name>
				<modelLink href="Ellipse/el_Vel_GPS_N"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_GPS_N" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_GPS_E">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_GPS_E"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_GPS_E">
				<name>el_Vel_GPS_E</name>
				<modelLink href="Ellipse/el_Vel_GPS_E"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_GPS_E" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_SolutionMode">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_SolutionMode"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_SolutionMode">
				<name>el_SolutionMode</name>
				<modelLink href="Ellipse/el_SolutionMode"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_SolutionMode" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_GPS_D">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_GPS_D"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_GPS_D">
				<name>el_Vel_GPS_D</name>
				<modelLink href="Ellipse/el_Vel_GPS_D"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_GPS_D" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_EKF_Y">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_EKF_Y"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_EKF_Y">
				<name>el_Vel_EKF_Y</name>
				<modelLink href="Ellipse/el_Vel_EKF_Y"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_EKF_Y" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_U.el_Vel_EKF_Z">
				<definitionLocation>
					<baseRef identifier="Ellipse_U"/>
					<memberRef identifier="el_Vel_EKF_Z"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_EKF_Z">
				<name>el_Vel_EKF_Z</name>
				<modelLink href="Ellipse/el_Vel_EKF_Z"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_EKF_Z" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- rtY output ports following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_Y.el_VEL">
				<definitionLocation>
					<baseRef identifier="Ellipse_Y"/>
					<memberRef identifier="el_VEL"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_VEL">
				<name>el_VEL</name>
				<modelLink href="Ellipse/el_VEL"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_VEL" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Ellipse_Y.el_Vel_OK">
				<definitionLocation>
					<baseRef identifier="Ellipse_Y"/>
					<memberRef identifier="el_Vel_OK"/>
				</definitionLocation>
				<fileOrigin name="Ellipse.c"/>
			</dataCInterface>
			<modelOrigin identifier="Ellipse.el_Vel_OK">
				<name>el_Vel_OK</name>
				<modelLink href="Ellipse/el_Vel_OK"/>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="el_Vel_OK" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Ellipse_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_Start_Ellipse">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Ellipse_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_Start_Ellipse">
				<name>irt_Start_Ellipse</name>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="irt_Start_Ellipse" kind="mlsl:process" type="initialization"/>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<constraint>
						<execution trigger="initialization"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the initialization process of the Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_OneStep_Ellipse">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Ellipse_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_OneStep_Ellipse">
				<name>irt_OneStep_Ellipse</name>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="irt_OneStep_Ellipse" kind="mlsl:process" type="execution">
						<pathParameter name="mlsl:baseSampleRate" value="0.2"/>
						<pathParameter name="mlsl:sampleRates" value="0.2"/>
					</pathNode>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<messageAccess>
						<message identifier="Ellipse_U.el_LATITUDE_EKF" send="false"></message>
						<message identifier="Ellipse_U.el_LONGITUDE_EKF" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_GPS_Valid" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_EKF_Valid" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_EKF_X" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_GPS_N" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_GPS_E" send="false"></message>
						<message identifier="Ellipse_U.el_SolutionMode" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_GPS_D" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_EKF_Y" send="false"></message>
						<message identifier="Ellipse_U.el_Vel_EKF_Z" send="false"></message>
						<message identifier="Ellipse_Y.el_VEL" send="true"></message>
						<message identifier="Ellipse_Y.el_Vel_OK" send="true"></message>
					</messageAccess>
					<constraint>
						<period value="0.2"/>
						<offset value="0.0"/>
						<execution trigger="timer" priority="normal"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the execution process of the Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_Terminate_Ellipse">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Ellipse_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_Terminate_Ellipse">
				<name>irt_Terminate_Ellipse</name>
				<modelLocation>
					<pathNode name="Ellipse" kind="mlsl:model"/>
					<pathNode name="irt_Terminate_Ellipse" kind="mlsl:process" type="termination"/>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<constraint>
						<execution trigger="termination"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the termination process of the INTECRIO Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
	</interface>
</module>
