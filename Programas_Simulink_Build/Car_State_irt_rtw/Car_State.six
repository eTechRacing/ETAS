<?xml version="1.0"?>
<!DOCTYPE module [
    <!ENTITY szlig "&#223;">
    <!ENTITY copy "&#169;">
    <!ENTITY baseTypes-mlsl SYSTEM 'file://C:\Program%20Files%20(x86)\ETAS\INTECRIO4.7\SCOOP-IX\1.2/common/baseTypes-mlsl.six'>
    ]>
<?xml-stylesheet type="text/xsl" href="file://C:\Program%20Files%20(x86)\ETAS\INTECRIO4.7\SCOOP-IX\1.2/common/showSCOOP-IX.xsl"?>
<!--
<h1>SCOOP-IX</h1>
<p>
    <strong>Copyright &copy; 2014 ETAS GmbH</strong>, Borsigstra&szlig;e 14, D-70469 Stuttgart. <em>All rights reserved.</em>
</p>
-->
<module xmlns="http://www.etas.com/scoop-ix/1.4" xmlns:ix="http://www.etas.com/scoop-ix/1.4" xmlns:mlsl="http://www.etas.com/scoop-ix/1.4/modelDomain/matlab-simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.etas.com/scoop-ix/1.4
        file://C:\Program%20Files%20(x86)\ETAS\INTECRIO4.7\SCOOP-IX\1.2/schemas/scoop-ix-domain-mlsl.xsd" xmlns:html="http://www.w3.org/1999/xhtml">
	<directoryLocations scheme="MATLAB 9.3">
		<directory identifier="integratorDir" path="C:\Program Files (x86)\ETAS\INTECRIO4.7\MATLAB\"/>
		<directory identifier="toolDir" path=".\"/>
		<directory identifier="modelDir" path="C:\Users\dwegg\Desktop\ETAS-main\ETAS\Programas_Simulink\"/>
		<directory identifier="codeDir" path="c:\users\dwegg\desktop\etas-main\etas\programas_simulink_build\car_state_irt_rtw\"/>
	</directoryLocations>
	<moduleInfo identifier="Car_State">
		<name>Car_State</name>
		<modelLink href="mlsl://&quot;{{modelDir}}Car_State.slx&quot;"/>
		<version major="1" minor="57"/>
		<dateTime kind="created" year="2021" month="2" day="18" hour="9" minute="1" second="3"/>
		<dateTime kind="lastModified" year="2022" month="6" day="18" hour="9" minute="42" second="11"/>
		<completion degree="full"/>
		<suitability>
			<application domain="rapidPrototyping" addressesAvailable="true" nestedDataStructuresAvailable="true"/>
			<application domain="softwareDevelopment" addressesAvailable="false" nestedDataStructuresAvailable="true"/>
		</suitability>
		<user lastName="GERARD" role="modifier"/>
		<creators>
			<user lastName="cspt" role="creator"/>
			<tool kind="environment" vendor="The Mathworks, Inc." name="MATLAB">
				<version major="9" minor="3" year="2017" month="7" day="24" info="R2017b"/>
			</tool>
			<tool kind="modeler" vendor="The Mathworks, Inc." name="Simulink">
				<version major="9" minor="0" year="2017" month="7" day="24" info="R2017b"/>
			</tool>
			<tool kind="modeler" vendor="The Mathworks, Inc." name="Stateflow">
				<version major="9" minor="0" year="2017" month="7" day="24" info="R2017b"/>
			</tool>
			<tool kind="codeGenerator" vendor="The Mathworks, Inc." name="Simulink Coder">
				<version major="8" minor="13" year="2017" month="7" day="24" info="R2017b"/>
				<mode name="target" value="INTECRIO Real-Time Target"/>
				<configuration>
					<option identifier="InlineParameters">2</option>
					<option identifier="InlineInvariantSignals">0</option>
					<option identifier="Solver">FixedStepDiscrete</option>
					<option identifier="SolverType">FixedStep</option>
					<option identifier="FixedStepOpts.FixedStep">0.025</option>
					<option identifier="FixedStepOpts.SolverMode">SingleTasking</option>
				</configuration>
			</tool>
			<tool kind="codeGenerator" vendor="The Mathworks, Inc." name="MATLAB Coder">
				<version major="3" minor="4" year="2017" month="7" day="24" info="R2017b"/>
			</tool>
			<tool kind="codeGenerator" vendor="ETAS GmbH" name="Connector for Simulink (IRT)" family="INTECRIO Tool Suite">
				<version major="4" minor="7" year="2018" month="1" day="1"/>
				<configuration>
					<option identifier="SCOOPIXFileName"><![CDATA[Car_State.six]]></option>
					<option identifier="ExternalMode">0</option>
					<option identifier="IgnoreCustomStorageClasses">1</option>
					<option identifier="StopSimuAfterAssert">1</option>
					<option identifier="GenerateOnlySelectedSignalsToASAP2">0</option>
				</configuration>
			</tool>
		</creators>
	</moduleInfo>
	<codeInfo>
		<constitution mode="sourceCode"/>
		<dateTime kind="created" year="2023" month="3" day="29" hour="12" minute="56" second="28"/>
		<target>
			<board vendor="ETAS GmbH" model="INTECRIO Generic Experimental Target"/>
			<tool kind="compiler" vendor="GNU Project" family="GNU Compiler Collection" name="GNU C Compiler">
				<configuration>
					<optionKind name="macroDefine" prefix="-D"/>
					<optionKind name="includeDirectory" prefix="-I"/>
					<!-- RTW specific defines -->
					<option kind="macroDefine" name="USE_RTMODEL"/>
					<option kind="macroDefine" name="MODEL">Car_State</option>
					<option kind="macroDefine" name="RT"/>
					<option kind="macroDefine" name="NUMST">1</option>
					<option kind="macroDefine" name="TID01EQ">0</option>
					<option kind="macroDefine" name="NCSTATES">0</option>
					<option kind="macroDefine" name="MT">0</option>
					<option kind="macroDefine" name="HAVESTDIO"/>
					<option kind="macroDefine" name="MdlStart">MdlStart_Car_State</option>
					<option kind="macroDefine" name="MdlOutputs">MdlOutputs_Car_State</option>
					<option kind="macroDefine" name="MdlUpdate">MdlUpdate_Car_State</option>
					<option kind="macroDefine" name="MdlTerminate">MdlTerminate_Car_State</option>
					<option kind="macroDefine" name="MdlInitializeSizes">MdlInitializeSizes_Car_State</option>
					<option kind="macroDefine" name="MdlInitializeSampleTimes">MdlInitializeSampleTimes_Car_State</option>
					<option kind="macroDefine" name="MdlInitialize">MdlInitialize_Car_State</option>
					<option kind="macroDefine" name="MdlEnable">MdlEnable_Car_State</option>
					<option kind="macroDefine" name="MdlDerivatives">MdlDerivatives_Car_State</option>
					<option kind="macroDefine" name="MdlProjection">MdlProjection_Car_State</option>
					<option kind="macroDefine" name="rt_ODECreateIntegrationData">rt_ODECreateIntegrationData_Car_State</option>
					<option kind="macroDefine" name="rt_ODEUpdateContinuousStates">rt_ODEUpdateContinuousStates_Car_State</option>
					<option kind="macroDefine" name="rt_ODEDestroyIntegrationData">rt_ODEDestroyIntegrationData_Car_State</option>
					<option kind="macroDefine" name="rt_ODECacheDataIntoSolverInfo">rt_ODECacheDataIntoSolverInfo_Car_State</option>
					<option kind="macroDefine" name="rt_ODERetrieveDataFromSolverInfo">rt_ODERetrieveDataFromSolverInfo_Car_State</option>
					<option kind="macroDefine" name="rt_ODECreateSolverInfo">rt_ODECreateSolverInfo_Car_State</option>
					<option kind="macroDefine" name="rt_SimInitTimingEngine">rt_SimInitTimingEngine_Car_State</option>
					<option kind="macroDefine" name="rt_SimGetNextSampleHit">rt_SimGetNextSampleHit_Car_State</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteTaskSampleHits">rt_SimUpdateDiscreteTaskSampleHits_Car_State</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteEvents">rt_SimUpdateDiscreteEvents_Car_State</option>
					<option kind="macroDefine" name="rt_SimUpdateDiscreteTaskTime">rt_SimUpdateDiscreteTaskTime_Car_State</option>
					<option kind="macroDefine" name="rt_CallSys">rt_CallSys_Car_State</option>
					<option kind="macroDefine" name="rt_EnableSys">rt_EnableSys_Car_State</option>
					<option kind="macroDefine" name="rt_DisableSys">rt_DisableSys_Car_State</option>
					<option kind="macroDefine" name="rt_SimDestroyTimingEngine">rt_SimDestroyTimingEngine_Car_State</option>
					<option kind="macroDefine" name="rt_InitTimingEngine">rt_InitTimingEngine_Car_State</option>
					<option kind="macroDefine" name="rt_DestroyTimingEngine">rt_DestroyTimingEngine_Car_State</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteTaskSampleHits">rt_UpdateDiscreteTaskSampleHits_Car_State</option>
					<option kind="macroDefine" name="rt_GetNextSampleHit">rt_GetNextSampleHit_Car_State</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteEvents">rt_UpdateDiscreteEvents_Car_State</option>
					<option kind="macroDefine" name="rt_UpdateDiscreteTaskTime">rt_UpdateDiscreteTaskTime_Car_State</option>
					<!-- RTW specific include directories -->
					<option kind="includeDirectory"><![CDATA[{{codeDir}}]]></option>
					<option kind="includeDirectory"><![CDATA[{{integratorDir}}c\src\]]></option>
					<option kind="includeDirectory"><![CDATA[{{integratorDir}}c\lib\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\simulink\include\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\extern\include\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\rtw\c\src\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\rtw\c\libsrc\]]></option>
					<option kind="includeDirectory"><![CDATA[{{codeDir}}external\_sharedutils\]]></option>
					<!-- S-Function specific includes directories -->
				</configuration>
			</tool>
		</target>
	</codeInfo>
	<!-- Model specific files -->
	<fileContainer constitution="sourceCode">
		<pathBase path="{{codeDir}}"/>
		<!-- Model specific source files -->
		<file name="Car_State_types.h" kind="header"/>
		<file name="Car_State.c" kind="body"/>
		<file name="Car_State_private.h" kind="header"/>
		<file name="Car_State.h" kind="header"/>
		<file name="rtmodel.h" kind="header"/>
		<file name="Car_State_data.c" kind="body"/>
		<file name="Car_State_main.c" kind="body"/>
		<!-- Additionally registered model specific source files -->
		<file name="rt_sim.c" path="{{codeDir}}external\rtw\c\src\" kind="body"/>
		<!-- Target specific libraries -->
		<file name="rtwStaticLib.lib" kind="symbolicLibrary"/>
		<file name="rtwSharedLib.lib" kind="symbolicLibrary"/>
		<!-- Additional files -->
	</fileContainer>
	<interface>
		<modelLinkBase href="mlsl://{{modelDir}}Car_State.slx?"/>
		<pathBase path="{{codeDir}}"/>
		<fileOrigin name="Car_State.c"/>
		<fileOrigin name="Car_State_data.c"/>
		<fileOrigin name="rt_nonfinite.c"/>
		<fileOrigin name="Car_State_main.c"/>
		<headerFile name="Car_State.h"/>
		<headerFile name="Car_State_private.h"/>
		<usage layoutFamily="mlsl:standardLayout"/>
		<!-- "import" MATLAB/Simulink base type and complex struct definitions via external entity -->
		&baseTypes-mlsl;
		<definitions>
			<structDef name="_P_TRUE_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Constant_Value">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 1 -- Referenced by: '&lt;S13&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="P_TRUE_Car_State_T">
				<struct/><typeRef name="_P_TRUE_Car_State_T"/>
				<fileOrigin name="Car_State_types.h"/>
				<annotation>
					<documentation>Type of parameters data structure for system '&lt;S1&gt;/TRUE'.</documentation>
				</annotation>
			</typeDef>
			<structDef name="_P_FALSE_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Constant_Value">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0 -- Referenced by: '&lt;S12&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="P_FALSE_Car_State_T">
				<struct/><typeRef name="_P_FALSE_Car_State_T"/>
				<fileOrigin name="Car_State_types.h"/>
				<annotation>
					<documentation>Type of parameters data structure for system '&lt;S1&gt;/FALSE'.</documentation>
				</annotation>
			</typeDef>
			<structDef name="_P_Failure_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Constant_Value">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 1 -- Referenced by: '&lt;S25&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="P_Failure_Car_State_T">
				<struct/><typeRef name="_P_Failure_Car_State_T"/>
				<fileOrigin name="Car_State_types.h"/>
				<annotation>
					<documentation>Type of parameters data structure for system '&lt;S7&gt;/Failure'.</documentation>
				</annotation>
			</typeDef>
			<structDef name="_P_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="CompareToConstant_const">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Mask Parameter: CompareToConstant_const -- Referenced by: '&lt;S21&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Constant_Value">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 6 -- Referenced by: '&lt;S19&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Constant_Value_k">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 3 -- Referenced by: '&lt;S20&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Constant_Value_f">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0 -- Referenced by: '&lt;S28&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="DataStoreMemory_InitialValue">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0 -- Referenced by: '&lt;S7&gt;/Data Store Memory'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Constant_Value_kb">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0 -- Referenced by: '&lt;S22&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Constant_Value_fl">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0 -- Referenced by: '&lt;S23&gt;/Constant'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Gain_Gain">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 0.9 -- Referenced by: '&lt;S10&gt;/Gain'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Merge_InitialOutput">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Computed Parameter: Merge_InitialOutput -- Referenced by: '&lt;S4&gt;/Merge'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Saturation_UpperSat">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 600 -- Referenced by: '&lt;S9&gt;/Saturation'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Saturation_LowerSat">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 400 -- Referenced by: '&lt;S9&gt;/Saturation'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="IfDCBUSnotbits_Gain">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>Expression: 1/100 -- Referenced by: '&lt;S9&gt;/If DC BUS not bits'
  </documentation>
					</annotation>
				</structMember>
				<structMember identifier="Failure">
					<type><typeRef name="P_Failure_Car_State_T"/></type>
					<annotation>
						<documentation>&lt;S7&gt;/Failure</documentation>
					</annotation>
				</structMember>
				<structMember identifier="FALSE_h">
					<type><typeRef name="P_FALSE_Car_State_T"/></type>
					<annotation>
						<documentation>&lt;S1&gt;/FALSE</documentation>
					</annotation>
				</structMember>
				<structMember identifier="TRUE_i">
					<type><typeRef name="P_TRUE_Car_State_T"/></type>
					<annotation>
						<documentation>&lt;S1&gt;/TRUE</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="P_Car_State_T">
				<struct/><typeRef name="_P_Car_State_T"/>
				<fileOrigin name="Car_State_types.h"/>
				<annotation>
					<documentation>Parameters (auto storage)</documentation>
				</annotation>
			</typeDef>
			<structDef name="_B_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Merge">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Opaque</documentation>
					</annotation>
				</structMember>
				<structMember identifier="TorqueEnable">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Car State Manager</documentation>
					</annotation>
				</structMember>
				<structMember identifier="error">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Car State Manager</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="B_Car_State_T">
				<struct/><typeRef name="_B_Car_State_T"/>
				<fileOrigin name="Car_State.h"/>
				<annotation>
					<documentation>Block signals (auto storage)</documentation>
				</annotation>
			</typeDef>
			<structDef name="ExtU_Car_State_T_tag">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Shutdown_SetaRight">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_SetaRight</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_SetaLeft">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_SetaLeft</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_Inertia">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_Inertia</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_BOTS">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_BOTS</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_SetaCockpit">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_SetaCockpit</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_BMS">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_BMS</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_BSPD">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_BSPD</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_HVBOX">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_HVBOX</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_HVD">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_HVD</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_InverterLIntck">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_InverterLIntck</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_InverterRIntck">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_InverterRIntck</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_TSMPIntck">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_TSMPIntck</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_PackageIntck">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_PackageIntck</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Shutdown_TSMS">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Shutdown_TSMS</documentation>
					</annotation>
				</structMember>
				<structMember identifier="AIRs_State">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/AIRs_State</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Accumulator_Voltage">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Accumulator_Voltage</documentation>
					</annotation>
				</structMember>
				<structMember identifier="DashPrechargeRequest">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/PrechargeRequest</documentation>
					</annotation>
				</structMember>
				<structMember identifier="EnableDrive">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/EnableDrive_Order</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Lock">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Torque_LockON</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Critical_CAN_Disconnection">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Critical_CAN_Disconnection</documentation>
					</annotation>
				</structMember>
				<structMember identifier="InvertersSubscribed">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/InvertersSubscribed</documentation>
					</annotation>
				</structMember>
				<structMember identifier="InvertersMinDCBus">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/InvertersMinDCBus</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_UnderTemperature">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_UnderTemperature</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_OverTemperature">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_OverTemperature</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_OverVoltage">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_OverVoltage</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_UnderVoltage">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_UnderVoltage</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_CurrentSensDisc">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_CurrentSensDisc</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_NTCDisconnection">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_NTCDisconnection</documentation>
					</annotation>
				</structMember>
				<structMember identifier="BMSerror_CANDisconnection">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/BMSerror_CANDisconnection</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="ExtU_Car_State_T">
				<struct/><typeRef name="ExtU_Car_State_T_tag"/>
				<fileOrigin name="Car_State.h"/>
			</typeDef>
			<structDef name="ExtY_Car_State_T_tag">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="Car_State_f">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Car_State</documentation>
					</annotation>
				</structMember>
				<structMember identifier="TorqueEnable">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/TorqueEnable</documentation>
					</annotation>
				</structMember>
				<structMember identifier="AIRs_Request">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/AIRs_Request</documentation>
					</annotation>
				</structMember>
				<structMember identifier="errors">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/errors</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Precharge_Percentage">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Precharge_Percentage</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Precharge_Voltage">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Precharge_Voltage</documentation>
					</annotation>
				</structMember>
				<structMember identifier="CurrentPathDisconnectionFlag">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/CurrentPathDisconnectionFlag</documentation>
					</annotation>
				</structMember>
				<structMember identifier="InvertersAction">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/InvertersAction</documentation>
					</annotation>
				</structMember>
				<structMember identifier="Car_OK">
					<type><typeRef name="boolean_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/Car_OK</documentation>
					</annotation>
				</structMember>
				<structMember identifier="PrechargeAssert">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/PrechargeAssert</documentation>
					</annotation>
				</structMember>
				<structMember identifier="ShutdownClosed">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>&lt;Root&gt;/ShutdownClosed</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="ExtY_Car_State_T">
				<struct/><typeRef name="ExtY_Car_State_T_tag"/>
				<fileOrigin name="Car_State.h"/>
			</typeDef>
			<structDef name="_DW_Car_State_T">
				<fileOrigin name="Car_State.h"/>
				<structMember identifier="A">
					<type><typeRef name="real_T"/></type>
					<annotation>
						<documentation>State information for 'dsmMem'.</documentation>
					</annotation>
				</structMember>
				<structMember identifier="temporalCounter_i1">
					<type><typeRef name="uint16_T"/></type>
					<annotation>
						<documentation>State information for 'DWORK3'.</documentation>
					</annotation>
				</structMember>
				<structMember identifier="is_active_c1_Car_State">
					<type><typeRef name="uint8_T"/></type>
					<annotation>
						<documentation>State information for 'DWORK1'.</documentation>
					</annotation>
				</structMember>
				<structMember identifier="is_c1_Car_State">
					<type><typeRef name="uint8_T"/></type>
					<annotation>
						<documentation>State information for 'DWORK2'.</documentation>
					</annotation>
				</structMember>
			</structDef>
			<typeDef name="DW_Car_State_T">
				<struct/><typeRef name="_DW_Car_State_T"/>
				<fileOrigin name="Car_State.h"/>
			</typeDef>
			<baseDef identifier="Car_State_P">
				<type><typeRef name="P_Car_State_T"/></type>
				<fileOrigin name="Car_State_data.c"/>
				<annotation>
					<documentation>The rtP data structure for parameters.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Car_State_B">
				<type><typeRef name="B_Car_State_T"/></type>
				<fileOrigin name="Car_State.c"/>
				<annotation>
					<documentation>The rtB data structure for signals.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Car_State_U">
				<type><typeRef name="ExtU_Car_State_T"/></type>
				<fileOrigin name="Car_State.c"/>
				<annotation>
					<documentation>The rtU data structure for external inputs.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Car_State_Y">
				<type><typeRef name="ExtY_Car_State_T"/></type>
				<fileOrigin name="Car_State.c"/>
				<annotation>
					<documentation>The rtY data structure for external outputs.</documentation>
				</annotation>
			</baseDef>
			<baseDef identifier="Car_State_DW">
				<type><typeRef name="DW_Car_State_T"/></type>
				<fileOrigin name="Car_State.c"/>
				<annotation>
					<documentation>The dWork data structure for model state.</documentation>
				</annotation>
			</baseDef>
			<conversion name="Car_State_CM_double">
				<rationalFunction>
					<numerator bx="1.0"/>
					<denominator f="1.0"/>
				</rationalFunction>
				<annotation>
					<documentation>Q = V</documentation>
				</annotation>
			</conversion>
			<conversion name="Car_State_CM_boolean">
				<rationalFunction>
					<numerator bx="1.0"/>
					<denominator f="1.0"/>
				</rationalFunction>
				<annotation>
					<documentation>Q = V</documentation>
				</annotation>
			</conversion>
		</definitions>
		<!-- rtP parameters following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.CompareToConstant_const">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="CompareToConstant_const"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="420.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.CarOK_Checks.Compare_nTo_Constant.Constant.CompareToConstant_const">
				<name>CompareToConstant_const</name>
				<modelLink href="Car_State/CarOK Checks/Compare\nTo Constant/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CarOK Checks" kind="mlsl:subsystem"/>
					<pathNode name="Compare To Constant" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Constant_Value">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Constant_Value"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="6.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRS_Request.Precharge.Constant.Constant_Value">
				<name>Constant_Value</name>
				<modelLink href="Car_State/AIRS_Request/Precharge/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRS_Request" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Precharge" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Constant_Value_k">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Constant_Value_k"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="3.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRS_Request.Tancar_Airs.Constant.Constant_Value_k">
				<name>Constant_Value_k</name>
				<modelLink href="Car_State/AIRS_Request/Tancar Airs/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRS_Request" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Tancar Airs" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Constant_Value_f">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Constant_Value_f"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.CurrentPathDisconnection_Detection.OK_or_latch.OK.Constant.Constant_Value_f">
				<name>Constant_Value_f</name>
				<modelLink href="Car_State/CurrentPathDisconnection Detection/OK or latch/OK/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CurrentPathDisconnection Detection" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="OK or latch" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="OK" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.DataStoreMemory_InitialValue">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="DataStoreMemory_InitialValue"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.DataStoreMemory_InitialValue">
				<name>DataStoreMemory_InitialValue</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CurrentPathDisconnection Detection" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Data Store Memory" kind="mlsl:block"/>
					<pathNode name="InitialValue" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Constant_Value_kb">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Constant_Value_kb"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.CarOK_Checks.Compare_nTo_Zero1.Constant.Constant_Value_kb">
				<name>Constant_Value_kb</name>
				<modelLink href="Car_State/CarOK Checks/Compare\nTo Zero1/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CarOK Checks" kind="mlsl:subsystem"/>
					<pathNode name="Compare To Zero1" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Constant_Value_fl">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Constant_Value_fl"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.CarOK_Checks.Compare_nTo_Zero2.Constant.Constant_Value_fl">
				<name>Constant_Value_fl</name>
				<modelLink href="Car_State/CarOK Checks/Compare\nTo Zero2/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CarOK Checks" kind="mlsl:subsystem"/>
					<pathNode name="Compare To Zero2" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Gain_Gain">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Gain_Gain"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.9"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.Gain_Gain">
				<name>Gain_Gain</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="PrechargeAssert Conditions" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Gain" kind="mlsl:block"/>
					<pathNode name="Gain" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Merge_InitialOutput">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Merge_InitialOutput"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.Merge_InitialOutput">
				<name>Merge_InitialOutput</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRS_Request" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Merge" kind="mlsl:block"/>
					<pathNode name="InitialOutput" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Saturation_UpperSat">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Saturation_UpperSat"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="600.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.Saturation_UpperSat">
				<name>Saturation_UpperSat</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Precharge Info" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Saturation" kind="mlsl:block"/>
					<pathNode name="UpperLimit" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.Saturation_LowerSat">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="Saturation_LowerSat"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="400.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.Saturation_LowerSat">
				<name>Saturation_LowerSat</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Precharge Info" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Saturation" kind="mlsl:block"/>
					<pathNode name="LowerLimit" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.IfDCBUSnotbits_Gain">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="IfDCBUSnotbits_Gain"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.01"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.IfDCBUSnotbits_Gain">
				<name>IfDCBUSnotbits_Gain</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Precharge Info" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="If DC BUS not bits" kind="mlsl:block"/>
					<pathNode name="Gain" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.OK.Constant_Value">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="OK"/>
					<memberRef identifier="Constant_Value"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="1.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRSOpened.TRUE.Constant.Constant_Value">
				<name>Constant_Value</name>
				<modelLink href="Car_State/AIRSOpened/TRUE/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="any element opened" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="OK" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.ERROR.Constant_Value">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="ERROR"/>
					<memberRef identifier="Constant_Value"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRSOpened.FALSE.Constant.Constant_Value">
				<name>Constant_Value</name>
				<modelLink href="Car_State/AIRSOpened/FALSE/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="any element opened" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="ERROR" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_P.FALSE_m.Constant_Value">
				<definitionLocation>
					<baseRef identifier="Car_State_P"/>
					<memberRef identifier="FALSE_m"/>
					<memberRef identifier="Constant_Value"/>
				</definitionLocation>
				<fileOrigin name="Car_State_data.c"/>
				<initValue value="0.0"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRSOpened.FALSE.Constant.Constant_Value">
				<name>Constant_Value</name>
				<modelLink href="Car_State/AIRSOpened/FALSE/Constant"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="PrechargeAssert Conditions" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="FALSE" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Constant" kind="mlsl:block"/>
					<pathNode name="Value" kind="mlsl:parameter"/>
				</modelLocation>
				<modelKind kind="parameter" visibility="private"/>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage calibration="true">
				<address kind="pseudo">
					<BLOB kind="DP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- Constant parameters following -->
		<!-- Exported global parameters following -->
		<!-- Imported extern parameters following -->
		<!-- Global BlockIO (rtB) signals following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_B.Merge">
				<definitionLocation>
					<baseRef identifier="Car_State_B"/>
					<memberRef identifier="Merge"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.Merge">
				<name>Merge</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRS_Request" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Merge" kind="mlsl:block"/>
					<pathNode name="Merge" kind="mlsl:signal"/>
				</modelLocation>
				<modelKind kind="variable" visibility="private">
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- Global constant BlockIO (rtC) signals following -->
		<!-- Exported global and imported extern signals following -->
		<!-- Global IRT DWork port signals following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_DW.A">
				<definitionLocation>
					<baseRef identifier="Car_State_DW"/>
					<memberRef identifier="A"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Opaque.A">
				<name>A</name>
				<modelLink href="Car_State/Opaque"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CurrentPathDisconnection Detection" kind="mlsl:subsystem" type="atomic"/>
					<pathNode name="Data Store Memory" kind="mlsl:block"/>
					<pathNode name="A" kind="mlsl:signal"/>
				</modelLocation>
				<modelKind kind="variable" visibility="private">
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
				<annotation>
				</annotation>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- rtU input ports following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_SetaRight">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_SetaRight"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_SetaRight">
				<name>Shutdown_SetaRight</name>
				<modelLink href="Car_State/Shutdown_SetaRight"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_SetaRight" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_SetaLeft">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_SetaLeft"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_SetaLeft">
				<name>Shutdown_SetaLeft</name>
				<modelLink href="Car_State/Shutdown_SetaLeft"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_SetaLeft" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_Inertia">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_Inertia"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_Inertia">
				<name>Shutdown_Inertia</name>
				<modelLink href="Car_State/Shutdown_Inertia"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_Inertia" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_BOTS">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_BOTS"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_BOTS">
				<name>Shutdown_BOTS</name>
				<modelLink href="Car_State/Shutdown_BOTS"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_BOTS" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_SetaCockpit">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_SetaCockpit"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_SetaCockpit">
				<name>Shutdown_SetaCockpit</name>
				<modelLink href="Car_State/Shutdown_SetaCockpit"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_SetaCockpit" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_BMS">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_BMS"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_BMS">
				<name>Shutdown_BMS</name>
				<modelLink href="Car_State/Shutdown_BMS"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_BMS" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_BSPD">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_BSPD"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_BSPD">
				<name>Shutdown_BSPD</name>
				<modelLink href="Car_State/Shutdown_BSPD"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_BSPD" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_HVBOX">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_HVBOX"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_HVBOX">
				<name>Shutdown_HVBOX</name>
				<modelLink href="Car_State/Shutdown_HVBOX"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_HVBOX" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_HVD">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_HVD"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_HVD">
				<name>Shutdown_HVD</name>
				<modelLink href="Car_State/Shutdown_HVD"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_HVD" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_InverterLIntck">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_InverterLIntck"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_InverterLIntck">
				<name>Shutdown_InverterLIntck</name>
				<modelLink href="Car_State/Shutdown_InverterLIntck"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_InverterLIntck" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_InverterRIntck">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_InverterRIntck"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_InverterRIntck">
				<name>Shutdown_InverterRIntck</name>
				<modelLink href="Car_State/Shutdown_InverterRIntck"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_InverterRIntck" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_TSMPIntck">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_TSMPIntck"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_TSMPIntck">
				<name>Shutdown_TSMPIntck</name>
				<modelLink href="Car_State/Shutdown_TSMPIntck"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_TSMPIntck" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_PackageIntck">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_PackageIntck"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_PackageIntck">
				<name>Shutdown_PackageIntck</name>
				<modelLink href="Car_State/Shutdown_PackageIntck"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_PackageIntck" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Shutdown_TSMS">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Shutdown_TSMS"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Shutdown_TSMS">
				<name>Shutdown_TSMS</name>
				<modelLink href="Car_State/Shutdown_TSMS"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Shutdown_TSMS" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.AIRs_State">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="AIRs_State"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRs_State">
				<name>AIRs_State</name>
				<modelLink href="Car_State/AIRs_State"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRs_State" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Accumulator_Voltage">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Accumulator_Voltage"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Accumulator_Voltage">
				<name>Accumulator_Voltage</name>
				<modelLink href="Car_State/Accumulator_Voltage"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Accumulator_Voltage" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.DashPrechargeRequest">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="DashPrechargeRequest"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.PrechargeRequest">
				<name>PrechargeRequest</name>
				<modelLink href="Car_State/PrechargeRequest"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="PrechargeRequest" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.EnableDrive">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="EnableDrive"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.EnableDrive_Order">
				<name>EnableDrive_Order</name>
				<modelLink href="Car_State/EnableDrive_Order"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="EnableDrive_Order" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Lock">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Lock"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Torque_LockON">
				<name>Torque_LockON</name>
				<modelLink href="Car_State/Torque_LockON"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Torque_LockON" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.Critical_CAN_Disconnection">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="Critical_CAN_Disconnection"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Critical_CAN_Disconnection">
				<name>Critical_CAN_Disconnection</name>
				<modelLink href="Car_State/Critical_CAN_Disconnection"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Critical_CAN_Disconnection" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.InvertersSubscribed">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="InvertersSubscribed"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.InvertersSubscribed">
				<name>InvertersSubscribed</name>
				<modelLink href="Car_State/InvertersSubscribed"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="InvertersSubscribed" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.InvertersMinDCBus">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="InvertersMinDCBus"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.InvertersMinDCBus">
				<name>InvertersMinDCBus</name>
				<modelLink href="Car_State/InvertersMinDCBus"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="InvertersMinDCBus" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_UnderTemperature">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_UnderTemperature"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_UnderTemperature">
				<name>BMSerror_UnderTemperature</name>
				<modelLink href="Car_State/BMSerror_UnderTemperature"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_UnderTemperature" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_OverTemperature">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_OverTemperature"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_OverTemperature">
				<name>BMSerror_OverTemperature</name>
				<modelLink href="Car_State/BMSerror_OverTemperature"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_OverTemperature" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_OverVoltage">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_OverVoltage"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_OverVoltage">
				<name>BMSerror_OverVoltage</name>
				<modelLink href="Car_State/BMSerror_OverVoltage"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_OverVoltage" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_UnderVoltage">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_UnderVoltage"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_UnderVoltage">
				<name>BMSerror_UnderVoltage</name>
				<modelLink href="Car_State/BMSerror_UnderVoltage"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_UnderVoltage" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_CurrentSensDisc">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_CurrentSensDisc"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_CurrentSensDisc">
				<name>BMSerror_CurrentSensDisc</name>
				<modelLink href="Car_State/BMSerror_CurrentSensDisc"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_CurrentSensDisc" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_NTCDisconnection">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_NTCDisconnection"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_NTCDisconnection">
				<name>BMSerror_NTCDisconnection</name>
				<modelLink href="Car_State/BMSerror_NTCDisconnection"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_NTCDisconnection" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_U.BMSerror_CANDisconnection">
				<definitionLocation>
					<baseRef identifier="Car_State_U"/>
					<memberRef identifier="BMSerror_CANDisconnection"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.BMSerror_CANDisconnection">
				<name>BMSerror_CANDisconnection</name>
				<modelLink href="Car_State/BMSerror_CANDisconnection"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="BMSerror_CANDisconnection" kind="mlsl:block" type="Inport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection in="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<!-- rtY output ports following -->
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.Car_State_f">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="Car_State_f"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Car_State">
				<name>Car_State</name>
				<modelLink href="Car_State/Car_State"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Car_State" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.TorqueEnable">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="TorqueEnable"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.TorqueEnable">
				<name>TorqueEnable</name>
				<modelLink href="Car_State/TorqueEnable"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="TorqueEnable" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.AIRs_Request">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="AIRs_Request"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.AIRs_Request">
				<name>AIRs_Request</name>
				<modelLink href="Car_State/AIRs_Request"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="AIRs_Request" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.errors">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="errors"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.errors">
				<name>errors</name>
				<modelLink href="Car_State/errors"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="errors" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.Precharge_Percentage">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="Precharge_Percentage"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Precharge_Percentage">
				<name>Precharge_Percentage</name>
				<modelLink href="Car_State/Precharge_Percentage"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Precharge_Percentage" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.Precharge_Voltage">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="Precharge_Voltage"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Precharge_Voltage">
				<name>Precharge_Voltage</name>
				<modelLink href="Car_State/Precharge_Voltage"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Precharge_Voltage" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.CurrentPathDisconnectionFlag">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="CurrentPathDisconnectionFlag"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.CurrentPathDisconnectionFlag">
				<name>CurrentPathDisconnectionFlag</name>
				<modelLink href="Car_State/CurrentPathDisconnectionFlag"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="CurrentPathDisconnectionFlag" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.InvertersAction">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="InvertersAction"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.InvertersAction">
				<name>InvertersAction</name>
				<modelLink href="Car_State/InvertersAction"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="InvertersAction" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.Car_OK">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="Car_OK"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.Car_OK">
				<name>Car_OK</name>
				<modelLink href="Car_State/Car_OK"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="Car_OK" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="Boolean">
					<valueRange min="0.0" max="1.0"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_boolean"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.PrechargeAssert">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="PrechargeAssert"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.PrechargeAssert">
				<name>PrechargeAssert</name>
				<modelLink href="Car_State/PrechargeAssert"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="PrechargeAssert" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<dataElement interfaceKind="export">
			<dataCInterface identifier="Car_State_Y.ShutdownClosed">
				<definitionLocation>
					<baseRef identifier="Car_State_Y"/>
					<memberRef identifier="ShutdownClosed"/>
				</definitionLocation>
				<fileOrigin name="Car_State.c"/>
			</dataCInterface>
			<modelOrigin identifier="Car_State.ShutdownClosed">
				<name>ShutdownClosed</name>
				<modelLink href="Car_State/ShutdownClosed"/>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="ShutdownClosed" kind="mlsl:block" type="Outport"/>
				</modelLocation>
				<modelKind kind="variable" visibility="public">
					<flowDirection out="true"/>
				</modelKind>
				<modelType type="continuous">
					<valueRange min="-1.7E+308" max="1.7E+308"/>
				</modelType>
			</modelOrigin>
			<implementation>
				<conversionRef name="Car_State_CM_double"/>
			</implementation>
			<usage measurement="true">
				<address kind="pseudo">
					<BLOB kind="KP_BLOB" device="E_TARGET"/>
				</address>
			</usage>
		</dataElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_Start_Car_State">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Car_State_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_Start_Car_State">
				<name>irt_Start_Car_State</name>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="irt_Start_Car_State" kind="mlsl:process" type="initialization"/>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<constraint>
						<execution trigger="initialization"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the initialization process of the Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_OneStep_Car_State">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Car_State_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_OneStep_Car_State">
				<name>irt_OneStep_Car_State</name>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="irt_OneStep_Car_State" kind="mlsl:process" type="execution">
						<pathParameter name="mlsl:baseSampleRate" value="0.025"/>
						<pathParameter name="mlsl:sampleRates" value="0.025"/>
					</pathNode>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<messageAccess>
						<message identifier="Car_State_U.Shutdown_SetaRight" send="false"></message>
						<message identifier="Car_State_U.Shutdown_SetaLeft" send="false"></message>
						<message identifier="Car_State_U.Shutdown_Inertia" send="false"></message>
						<message identifier="Car_State_U.Shutdown_BOTS" send="false"></message>
						<message identifier="Car_State_U.Shutdown_SetaCockpit" send="false"></message>
						<message identifier="Car_State_U.Shutdown_BMS" send="false"></message>
						<message identifier="Car_State_U.Shutdown_BSPD" send="false"></message>
						<message identifier="Car_State_U.Shutdown_HVBOX" send="false"></message>
						<message identifier="Car_State_U.Shutdown_HVD" send="false"></message>
						<message identifier="Car_State_U.Shutdown_InverterLIntck" send="false"></message>
						<message identifier="Car_State_U.Shutdown_InverterRIntck" send="false"></message>
						<message identifier="Car_State_U.Shutdown_TSMPIntck" send="false"></message>
						<message identifier="Car_State_U.Shutdown_PackageIntck" send="false"></message>
						<message identifier="Car_State_U.Shutdown_TSMS" send="false"></message>
						<message identifier="Car_State_U.AIRs_State" send="false"></message>
						<message identifier="Car_State_U.Accumulator_Voltage" send="false"></message>
						<message identifier="Car_State_U.DashPrechargeRequest" send="false"></message>
						<message identifier="Car_State_U.EnableDrive" send="false"></message>
						<message identifier="Car_State_U.Lock" send="false"></message>
						<message identifier="Car_State_U.Critical_CAN_Disconnection" send="false"></message>
						<message identifier="Car_State_U.InvertersSubscribed" send="false"></message>
						<message identifier="Car_State_U.InvertersMinDCBus" send="false"></message>
						<message identifier="Car_State_U.BMSerror_UnderTemperature" send="false"></message>
						<message identifier="Car_State_U.BMSerror_OverTemperature" send="false"></message>
						<message identifier="Car_State_U.BMSerror_OverVoltage" send="false"></message>
						<message identifier="Car_State_U.BMSerror_UnderVoltage" send="false"></message>
						<message identifier="Car_State_U.BMSerror_CurrentSensDisc" send="false"></message>
						<message identifier="Car_State_U.BMSerror_NTCDisconnection" send="false"></message>
						<message identifier="Car_State_U.BMSerror_CANDisconnection" send="false"></message>
						<message identifier="Car_State_Y.Car_State_f" send="true"></message>
						<message identifier="Car_State_Y.TorqueEnable" send="true"></message>
						<message identifier="Car_State_Y.AIRs_Request" send="true"></message>
						<message identifier="Car_State_Y.errors" send="true"></message>
						<message identifier="Car_State_Y.Precharge_Percentage" send="true"></message>
						<message identifier="Car_State_Y.Precharge_Voltage" send="true"></message>
						<message identifier="Car_State_Y.CurrentPathDisconnectionFlag" send="true"></message>
						<message identifier="Car_State_Y.InvertersAction" send="true"></message>
						<message identifier="Car_State_Y.Car_OK" send="true"></message>
						<message identifier="Car_State_Y.PrechargeAssert" send="true"></message>
						<message identifier="Car_State_Y.ShutdownClosed" send="true"></message>
					</messageAccess>
					<constraint>
						<period value="0.025"/>
						<offset value="0.0"/>
						<execution trigger="timer" priority="normal"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the execution process of the Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
		<functionElement interfaceKind="export">
			<functionCInterface identifier="irt_Terminate_Car_State">
				<signature>
					<return>
						<type><void/></type>
					</return>
					<void/>
				</signature>
				<fileOrigin name="Car_State_main.c"/>
			</functionCInterface>
			<modelOrigin identifier="irt_Terminate_Car_State">
				<name>irt_Terminate_Car_State</name>
				<modelLocation>
					<pathNode name="Car_State" kind="mlsl:model"/>
					<pathNode name="irt_Terminate_Car_State" kind="mlsl:process" type="termination"/>
				</modelLocation>
				<modelKind kind="process"/>
				<runTimeInfo>
					<constraint>
						<execution trigger="termination"/>
					</constraint>
				</runTimeInfo>
				<annotation>
					<documentation>
                        This is the termination process of the INTECRIO Real-Time Target code.
                    </documentation>
				</annotation>
			</modelOrigin>
		</functionElement>
	</interface>
</module>
